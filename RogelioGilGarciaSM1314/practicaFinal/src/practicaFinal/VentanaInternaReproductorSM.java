/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package practicaFinal;

import java.awt.event.ActionEvent;
import java.io.File;
import javax.sound.sampled.LineEvent;
import javax.sound.sampled.LineEvent.Type;
import javax.sound.sampled.LineListener;
import sm.sound.SMClipPlayer;
import sm.sound.SMPlayer;
import static sun.audio.AudioPlayer.player;

/**
 * Ventana que hereda de <code>JInternalFrame</code> y define los métodos 
 * necesarios para la reproducción de audio mediante la biblioteca SM.
 * @author Rogelio Gil García
 * @version 1.0
 */
public class VentanaInternaReproductorSM extends javax.swing.JInternalFrame {

    SMPlayer player;
    /**
     * Constructor para la ventana de reproducción de audio.
     * @param f Fichero a reproducir
     */
    public VentanaInternaReproductorSM(File f) {
        initComponents();
        
        player = new SMClipPlayer(f);
        //player.setLineListener(lineListener);
    }
   
    LineListener lineListener=new LineListener(){
            public void update(LineEvent event) {
                if(event.getType()==Type.START) {
                    //TODO
                    System.out.println("START");
                }
                if(event.getType()==Type.STOP) {
                    //TODO
                    System.out.println("STOP");
                }
            }
    };
    
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gReproduccion = new javax.swing.ButtonGroup();
        play = new javax.swing.JToggleButton();
        stop = new javax.swing.JToggleButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconosSonido/PlayPressed_48x48.png"))); // NOI18N
        play.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/iconosSonido/PlayDisabled_48x48.png"))); // NOI18N
        play.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playActionPerformed(evt);
            }
        });
        getContentPane().add(play);

        stop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconosSonido/StopPessedBlue_48x48.png"))); // NOI18N
        stop.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/iconosSonido/StopDisabled_48x48.png"))); // NOI18N
        stop.setEnabled(false);
        stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopActionPerformed(evt);
            }
        });
        getContentPane().add(stop);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void playActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playActionPerformed
        if(player!=null) player.play();
        play.setEnabled(false);
        stop.setEnabled(true);
        
    }//GEN-LAST:event_playActionPerformed

    private void stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopActionPerformed
        if(player!=null) player.stop();
        stop.setEnabled(false);
        play.setEnabled(true);
    }//GEN-LAST:event_stopActionPerformed

    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup gReproduccion;
    private javax.swing.JToggleButton play;
    private javax.swing.JToggleButton stop;
    // End of variables declaration//GEN-END:variables
}
